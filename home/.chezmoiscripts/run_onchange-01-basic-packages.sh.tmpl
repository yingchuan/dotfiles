{{ $sudo := "sudo" -}}
{{ if eq .chezmoi.username "root" }}
{{ $sudo = "" -}}
{{ end -}}
#! /bin/bash
{{/* ubuntu could be amd64 or arm64 (vm in a macbook mX) */ -}}
{{ if (or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "pop")) -}}
{{ $sudo }} apt update
{{ range .ubuntu.apt -}}
{{ $sudo }} apt install -yy {{ . }}
{{ end }}
# install snap
{{ range .ubuntu.snap -}}
{{ $sudo }} snap install {{ .instance }} {{ .args }}
{{ end -}}
# install docker
[ ! -f /etc/apt/keyrings/docker.asc ] && {
  # Add Docker's official GPG key:
  {{ $sudo }} install -m 0755 -d /etc/apt/keyrings
  {{ $sudo }} curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  {{ $sudo }} chmod a+r /etc/apt/keyrings/docker.asc
  # Add the repository to Apt sources:
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  {{ $sudo }} tee /etc/apt/sources.list.d/docker.list > /dev/null
  {{ $sudo }} apt-get update
  {{ $sudo }} sudo apt-get install -yy docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
}
# install lazygit
[ ! -f $HOME/go/bin/lazygit ] && {
  go install github.com/jesseduffield/lazygit@latest
}
# install poetry
pipx install poetry
# install ruff
pipx install ruff
{{ end }}
{{/* with amd64 or macos, we use brew to manage packages */ -}}
{{ if (or (eq .chezmoi.os "darwin") (and (eq .chezmoi.os "linux") (eq .chezmoi.arch "amd64"))) -}}
{{/* check homebrew installation */ -}}
if ! which brew > /dev/null; then
  echo "Homebrew not found. Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
else
  echo "Homebrew is already installed."

  export HOMEBREW_NO_INSTALL_CLEANUP=true
  {{ range .homebrew.formulae -}}
    brew reinstall {{ . }}
  {{ end -}}
fi
{{ end }}
# install pyenv
PYENV_ROOT="$HOME/.pyenv"
[ ! -d $PYENV_ROOT/bin ] && {
  curl https://pyenv.run | bash
}
exit 0
